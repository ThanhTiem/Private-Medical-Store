<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHwAAAB8CAYAAACrHtS+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABaASURBVHhe7V0LtB1Ved5zzgWLq6G0lNaK1q5aKQVjsbSKCOKjqCzEAkuCC1uD0CrVQgVRoYVi
        ra6F4ko1RSRgEgLJfczsOTcvHvIwPPI25Ca5OWdmz8njXkhiuWAgCUlI0pB+/57/3NybO3vOa86599w7
        31r/unDy7z0z/7f/x57Zs0ekSDFu8I5p9gmivXCmyHkXC8e/QjjeN/D3NiGDfz8q6hb9b1JdKmx/srDX
        /A43TzFmMTd/hpCFa4Sj7s246jHLDTZk3OA3bfM3HWmbv/lIdsGWI9mFJFshfSOF/h1CutQGbV+zXFXI
        uMUn8HeOkN7XRG7jX/LRUjQbx9ne2cIp/FdGqictqfpLpLaBvDaQ2kb/3Q2yc0VIUKWgDbVdAPKpLz0g
        8BfHAPkvYTA8jUjxo7acdwGfToqGIBdcDM+dm3F9TxOsyQiJiCauAUIRQ0eJ8LiZnOq3pCeFXbhSzF5y
        Ep9pippBXiTVffDkLSVja8+LImM0hAbbUfK3WTLoEk7+Ij77FBXDUf+I0Lk0mysebLoX1yol8ruLhxH6
        e4T0vylmPJEWgEbY9vHIjd+BsYram3UeriUHj7LQOXMRmHXVi8L1pwk7/za+yhQaUt2OsN2vC68kQjYV
        XeRx1B+q8zYqugb/+xih34bqaEFbGnRRfVcj7PUg/iVM/aaJ6dPfwlc8QWEXroVHB9owtYZt7VGhYTVx
        6AeD57VMLlBICasyMngMA+oBeNp3havuwBTrRpFTX8QcfCrC7nX6N1d9B4TcjzTySDanVmJqhykZpnW6
        WqcBwYOh1ojD9QfOaxvS1a189RMIc/3JVi5YMhi6o4wUJ6UCDgRn3eAQCqa8Jf0cUsKtWbfwt8Le8Od8
        pNph5/8s2+V/DIPjRstRHRgAz+NYe8PjQmqJAHpgbzmC4m69sL0L+UjjHI53V9Ytvq5DaDUeQ7psbBj/
        VRjtUXjoDaJz/Xu558YDgwCR4EuISjmqysN0QNdRJfkY5NlccBC2mMU9j0O0rzvTkmptGBqrMBB5xaI+
        MtB+GPpxhOR/EnNXnci9ji7swmWW43cjfeyiO3ZV1R88gKlI1bd+xxWk9zWEwz1VhW/yAhCNHEx57y7x
        0Jo/4t7GHqZNOwHR5t+Q+z19U6ba68wFh0SXdxf31tqg/JfVuatCr4aXaKJROCHP/Qt30zro6p2CemJ1
        OOOokHjt7X3w9uCX3EsL4gcLJuHCf0XhuKJcjTBPYRG5uR9Ef5l7aV04Gz+DcL9BX3+lMxB9/eoFFJ1n
        cy8tgu78BzBad+iHGVEXNlQ4lyF076EHItzD+EFX8BVMxwbC4q6Cga9DvNqNvP557mGMA4UMctKuisIZ
        jXx4trDVYjFz6STuYXzC8efALocrtYuu4u3CN7n1GIXrXY0TPVBRCNNe7b+M8H01tx7/cLyPwts36chX
        zttR86DQPUL3Frj1GAOR7VZANl0oRjny+1PCviLLrZsLx7tcTFtxAv9f8yH9Tv3cvVwhS3XNmCRdelMr
        Ijv89/8TUv2QWzYfXYVr4GVUHPWO6nImx7+e6payIX7MkW57FyKM7y9LNi4Mhn5V2P5V3LL56PJvhvEO
        as9C9Wy5vi9mrn07/2vz0e5dkHGDrbqgi7JZSYh0RITRn6ZKdXrWVbvL3mGifO0Gm0VH77ncsvmQ3u0Y
        mMPD6IKtVBxhGljFNEgGH0SUOEf/rURI1/Y+JBateSv3MBwdve/M5Iqrys5oKKfnilTIXcYtmw/LUVvK
        js6Q7PVCFt7DzZoOy1U/obBInjLy/PQ0aBvO73xWjwXdxwdBr2fc4h6TZIf+v9YN9mnSzbBgy8dCW8YU
        c4ii5GDCzp/B7ZoH5MBny45K/HvGVctHM1eiOLxHe3VcVYx0A+95BaRfys2MQD+HBvurSKCLSCLczR/m
        Lsxw/cVlSce/W45f5BZNgg0jliVbezbIXvLb3KrpsBzPLkt2SeiWrhvsRDH1BW4eCfR1sKL+hgo8E/VD
        ecIJg6RH9FMSIt0NHuEWDQaKLhjmzdiLpgKNCqL5ve/kVk0HwrirK+BqyNEhM9iPvHsddzMCDSccwED9
        ZbxDFfUSKnDxn9ykQZiz+mR47f/GVuS6Gg+QE9Xp3KrpgMGerprsklBxJNUbVNFzd8PQDMLp/gRS4bpY
        Tw+naxicGyvvt2q46uHYk4CxMPXaK+zeUVvNgfz2nF5cEXV+lQqRjr/CKdzG3Q6iKYQT5hXeBdK3x86A
        MKjpLRtukTAc9VV9oaaL5X8TTv56btF0oJDcWLa2qFRKc19X/Yi718A1NodwQmf+IpqKRc4uShKG9h9z
        i4QwfdWJ8Nz4UA5D48APcovmor33Dy0ZqMTILgkRSzdo5FGDNpVwglS30Do44zH1wKTQvuEcbpEApJoX
        a0zK2w0LLWVgrzs1K4NfJ072oMDQi/vprlwHHQ6/HWgq4QAi1y9iUyn+LZNTz7J6nXB6P4oR9EaZEXZA
        dHrNW0xYQkfvuShcBvRiwqhzS1Lg6Uhrv8jmNh2InSdHSZ2EE+BQvzZGWHCThdAbO6xeOzBynowbXbSG
        S8hGTw8iAAOC7OrWydUrcSktThIgHPPzq/Q9BdNg0wWc8li7Rjje5fDew0bvDg/Sy9rNg124EmF8X80E
        NFuSIJzg+o+US62CNjyoFSDzGWO4pDCiq1j/Y6zeHHR5UzFPPtgyZJMkRfjddB9E7TNW7TgOiust4opa
        1hnIwqXoxOzdlNOkWsjazYFT+BbCOC4sZpoyFiUpwgmOd5deGBl1HIi+A+eor7N25bAcCh+G3K29Ozgk
        Zqz5fVZvPGz1HyD7zZYjmyRJwoGM679sjHAL9E4VVabZro1/A+Pujffu5s25Mfj+W4cx0/mMdUmYcETW
        m4xeHjoj+ClMYe0KQI8U47zbVQfEQ15T3gTBHPQ+TXSrkk2SNOEAcrV5mkbzcjd4nFXLYMaM46DcZ+wM
        I0tvbdEEgOx2fS+5lckmaQDh8PLv0Rs6kcfTThnsgU4FD7Ac/wv61SBTR/irl+00GCB7sR50rU42SSMI
        n7HmrajYdxkrdn1/xPsea5sBQy80hvNw3r2KVRsG5Ownq36deCxLIwgHwEVHHFeI1GtZ1YC5q06E0oCp
        Eua7ajewdkOAi1hT9+PNsSYNIlzY+Y9ntYdHOEYYjQ8LWXw/a0egqzCFRsaIxrqDcIdCMbunYfuRWdJf
        FzfHbFlpFOEAHMQzPTPXDkpbnZhAr/YaQwR+ByELWDVZzFl9claiUDQdu9WFCI/1tDrg+tP0O+lRx8Xv
        cNJnWHMkMKEvGFdYoLFw1bWsmhzs/B9nJW2fMU7JJqHaR6p5fMXJQgbn0y3u6LCun2TuFnfkj2ftIaBN
        bPTa7eiGVBEKOziVtZOBnT8rm0Ol2YzHm6Mti/qPCMdbxFeeKMCNMaxrR3Xyf8eqQyD964xeRhWfVMtY
        Mxk46hPhWysTgOySLHqBSF/CFkgMlhPYRu4W9h1Bqr6PVY/Ccv25xkdvepR4P2HV+mH3XoZoctA4Ksez
        wNMtx/sVWyIZOP5XzITrPD5yK5FMLlhp9Db8nnWCy1m1PriFf0bOruwd8vEqRLrrr4M12kKj1Il5lBqD
        /ZHpGHZGJf8iax4FRsErkfNvnfgpf/v1b3bnFL6OE2vNJ15JC3meVJuodmLr1A7bzsJhi0YnolnCnKH1
        V8fatxuVEXZRBda9QBF55Pst+3izUQLSUcdsFrJQ95QNhC8xRWj9jJw+8TEI6V+it5mKUNYFWy54ijVr
        AqYkP9ThRt8VijjGRBZKl3rzXfUJNldtcIOfmmY7+gZMl3c7awLS+7Zx8k6jw1H3smbVsKQ3W3t1SrZZ
        iHSpBuhOJ5utekj/BpOH8xPOo+sXLFm8z3hLkwinzd6rxewlv2VJv1MPJDoRShlDxbT6ciIIRbtj7QH7
        o47aV/NSY9v/rJHwsF54mDX1xN01Tsk04ar6kdfdc5Jw/U9luxGqaKFjSboKH8EAuia8OxRxvPEuiHZI
        cf2iOzhrmF3oQQjshd8/wBasDuEa/ej3B8Ch5QYrWFNX6Ob1ayjaRHfxk6yaDHBRtHA+8njjXeDNyLcB
        WyI5dHqnwXFfjkydOCamZoo16aaLWhUZDkCK3iGx0/srVk0Grv/hCU548js4dHsnZ3LF6JVKmvDg6Fzc
        ok1lIgnfRBU65uD5s1g1GUxwwmH8hmzZkTXNxUuOWwK9YxxJOPINwsRAIjcHhiL18AYRXgSPEYRTvQR7
        sxp5eLDNFArg4X0g/PdYNRk0inCa/tF1JClJnyf6HBXC8ZfVaFqmYggv9lF+YNVk0ADCEc5o+rhNF0Qw
        qA6bx0gNvynL9XclSvpoEd49lPCc6jHmcDf4jf6Ya5JImnD0BcIPCfooTdJw/Z8n+rx+NAgnW0NYrYKi
        rVMl+2XdhhBePCQcFfGgv07kig8kTbiOIElj+iNvwaDfFBmpwaMlg1dYU3t49KNRGBJFG21jlew69AlO
        eEM8/MH1f5DpDvojH07RIKNvppUAUs2bwWEgiJz/aVZNBk0gHNOQqYhOAaRQhSBnq+Gv6LQK4Xb+DPC4
        M/LGC8I8rqvAmoj9ruqMv5eu/p5Vk0EzCHeCb9DeLDqnVSqwAfrp4y5CtAzh6rysGxwiW4w4JjjETGzI
        EjVH3W1e3gTC3YT36m6KhxdvjExTcQIykAc3cxchWoZw/3PG66WHJ7lgPmsC0rvJ/Hh0K3n4bNZMBhOc
        8IYUbS4imul66fGoGwz5CiJtcm9Sxu+Ymi1lzWSQenjyhDv+HNMrWnoBhO3dwprAzKWT2rqRw6IeWeIE
        QXiyT3dSwhMnnJzSdL3hNiDe8CeeGdffTiczogEZU2/w7k9m1fqREp4s4Qv8SZlccYuRP/wV0+zhH/XB
        NGaJcWqGCxau+gdWrR8p4ckS3lU8B+cdvQETjof8PXzmQbCc4P7YFxFcldynj9OiLVnCpf+vxnPUFXrx
        UdYcAtrpz/ReNgyHifvzrFk/Ug9PlHBLesZNHHTB5hTuZNUhmNVzCnJ19MaxZFDayKfTO42160NKeJKE
        Z1GwbaV+I48HG4icOo91hyPj8gfdoxqGYb36Dd+ikBKeHOFdGz9lvE69YNIfYM2RsGTwc3PhRrkgoS2a
        U8ITI9yi+XccZ1I9waoR0DdgDKGBjKqnZ+vqf0c8JTwxwjO5mHBOUdkpxEdlhPXN5g5oz3C//m98T3DC
        E6vSXf9zxlvi2ibBXtHh/QlrRwMx/0FjiIABUa1vZNXakXp4IoRbsvQ1w4jj4Nrh/U+zagxs/9OlVY6R
        HVGYsP3PsnZtSAmvn/DOje+GDc3fXyGeZPSnuEaAvFg/H47siDao8et6mzQlPAHCHe9e4xoGVOe4jpfE
        7NVvY+0ycLzvG0MFGRdS19soKeH1EX6BaMuW23bTVfqjPJXB3kQ7Ou2MXB/FHSIKLGbt6pEWbfURLr3/
        MXq3tkUAW+SrfN88bh9P5PgsBoOQNX4PPPXwugjPuMHrZu+m9QvqOVatArb3IXi5eZN8GBOT/to22k0J
        r51w2lI8xrvJGZGSv8ja1QHFWfy3RvXyJ/8aVq8cKeG1ER7u1sTEHtMvCTmhDOrYEszOn4cDmMMHTp52
        5mftypESXhPhmHebn3WENqClTFezeo1wffMufyR09016D7B2ZUiLtuoJl+oW4101Elwrcvdy1q4DnetO
        gxFeNVbsZGxXIW9E7edpgCycr0+ehEipV9BPOLqDy/gIIDy4ue3hF3QRE9kmShb3Uz/93EUIGTzU9vCL
        1fUTI8fhGPDwrdx7ZWgvvCcTF2n1gEdlngsu5hZ1wvHvjB9dOrRvZ+3ykOp9mNYtt3LFZbRAPgFBX+pZ
        vX9MCY73efy2KkI3TlbgvBzuIYTr34bfqu3HLFKtRG1U1TdjYFtzKCfRUba6PssCYcgvd1BcyJOsniIp
        OGqWsSonobtq9IbvrJ5TuEVCkP4lOED0qywlwYCAZw37wHqKOuDkr499rkG/UxEovZu4RcKQ/szYAi48
        sTeFU/gqt0hRK9p7L0Qo32usnUgwLbZcf+ROyUkCOUjFhnacYIa+mVVNEZdiOOwNk1F07oi3s66bBsSM
        Rn8wsGP9B1ER7jVWjCQ4UZzMSzSP51YpKkU37bfm+7FTwbAqRyT1v8StGgzp39w2HydUJp+D9B00BeNW
        KcrhDvt4TL96YtMmCVXltn8Pt2oOLMefG1s9koSkbxcdKellIXtP16uGKyAbaTWZxaTVAvPTFRWSvgM5
        /SJuluJYzM2fARt55clGkeb4W7jV6ACjbVPZEw1J3y06a3yKM57hbPwkbPMi2SjSdiUhG7rBTooE3HKU
        gBOAp+8oSzqqSvw9JFw/4rWXCQpMX2lLzLJk0z1+Fw5jexdyy1EGphEgfbvx3bSSUGWPYs9q0Pe7WgqO
        fz9sUv6TIJrs4CAc5SpuOUbgFs7RpJfzdKrsUXggjG0Rdu8F3HriYO6GdyA0ryEbxM5ySEKyDwi33kee
        jYLspYci5UknQRgLH2n607j1+If0vo1KfHfl9lG7MK1NdgetxCELZ1rSRyFXpnonoRsISAMY8T4VL9zD
        +EO7tskKnavLhXASDAhEwJ3i2G06xixm95wET19NH2SL3DfmWKHR7AZHhKO6xbcWTOJexgcc9bMsvTBQ
        rjArSTjP3kwb7XEPrQPMGW1dyMXdhi0J5TPM6bM5FCiOP5O7aF04he9m6EO6dJ+iXK4m0dffT4+YR+em
        SmJwvFtpM4GKR/hR4t9AzpudyNuqzYTj/wDheCCria5goJOExRl9W+xn3EuLo2vDR+Dtm3WxUsloJzlK
        /CGkh8Wiy7+Eext7sPPnIQy3o8jarz26kjxNQtdI+dpVLwu7kNymSWMGtt+JC33T+N5alLBRSEB8kd66
        ENL/a+5x9EB3vBz/TpDVmyVPrmYwk9CggGdbObWEah7udRxCqinwhr4wt1XoCSWhgQLD0oJFeoRIn8CG
        Z1xZ9h3oJDBn3alZWhXr+D+1ckEPIs9hvc5Pp6oqiB706mAAtriRe58AcLx7kbf2hUVdFQYjIX0mn9qj
        nz2ZXPA8DOjQcl5ajkX3BBBqq/9WC3kbVch0G5N2T5BqHrx4NWSnJrdEck3nrGcjh/R5Vvxm53iC7Z2N
        MP04jHBQP/Cv1ogloUhRIoOXE9Ngghf1ZXP+Bnjj8mx38Ay809b7zdFmwSS04awM5kH3Gegsg/TQFhp0
        31o/7x9KcKV5+VhhoukvrnUFpmnpU0N4+2csGSxr6w4O1+TxUUJ9IEfqSDCEOLrRo49BkUH/HUIqCbWp
        NtVESYlohHvLDdYKW13LV5tiELJwKeahj5J3ahJq9arRFDpnnDvdNkaEWYqo0qRlSK0M6Z9rOWoW8uYO
        va23DvdjmPySNxPR3cEAilKZLvioBXbPKeEzY7UEXv+a9vqx4vl6KsYku8EBnONK1Ae3inmFd/HZp6gL
        8zb8KcLj9ZiOPQUPGiCPGnw/jfJuFClJCg0y9mIiGgS/hgiEQtC7Q3QU3s9nmaIhuOe5383qaZM3nYxe
        2us9DP88COi/BwuwSopA6AwWeqV++sI+8RuOM4CcvByp5gFU+FOSf7UnRXXoXP/ejPSmIv/fDe9biOnV
        MhSAW0BS+OYrERknGBjQ3YvZQn8mp1ZmcpsWYdo4Q7jelxP/nHaKJoC+kCzV+4S9efIwacdvncFfsFaK
        FOMJQvw/Q75/xRC/CAwAAAAASUVORK5CYII=
</value>
  </data>
</root>