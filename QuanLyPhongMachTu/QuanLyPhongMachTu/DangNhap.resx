<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DAAAAABJRU5ErkJggg==
</value>
  </data>
</root>